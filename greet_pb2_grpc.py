# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import greet_pb2 as greet__pb2


class CameraStreamStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendCameraStream = channel.unary_unary(
                '/CameraStream.CameraStream/SendCameraStream',
                request_serializer=greet__pb2.SendCameraStreamRequest.SerializeToString,
                response_deserializer=greet__pb2.SendCameraStreamResult.FromString,
                )
        self.GetActiveCameraIds = channel.unary_unary(
                '/CameraStream.CameraStream/GetActiveCameraIds',
                request_serializer=greet__pb2.GetActiveCameraIdsRequest.SerializeToString,
                response_deserializer=greet__pb2.GetActiveCameraIdsResult.FromString,
                )
        self.GetCameraTexture = channel.unary_unary(
                '/CameraStream.CameraStream/GetCameraTexture',
                request_serializer=greet__pb2.GetCameraTextureRequest.SerializeToString,
                response_deserializer=greet__pb2.GetCameraTextureResult.FromString,
                )
        self.GetAverageFps = channel.unary_unary(
                '/CameraStream.CameraStream/GetAverageFps',
                request_serializer=greet__pb2.GetAverageFpsRequest.SerializeToString,
                response_deserializer=greet__pb2.GetAverageFpsResult.FromString,
                )


class CameraStreamServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendCameraStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveCameraIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraTexture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAverageFps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CameraStreamServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendCameraStream': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCameraStream,
                    request_deserializer=greet__pb2.SendCameraStreamRequest.FromString,
                    response_serializer=greet__pb2.SendCameraStreamResult.SerializeToString,
            ),
            'GetActiveCameraIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveCameraIds,
                    request_deserializer=greet__pb2.GetActiveCameraIdsRequest.FromString,
                    response_serializer=greet__pb2.GetActiveCameraIdsResult.SerializeToString,
            ),
            'GetCameraTexture': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraTexture,
                    request_deserializer=greet__pb2.GetCameraTextureRequest.FromString,
                    response_serializer=greet__pb2.GetCameraTextureResult.SerializeToString,
            ),
            'GetAverageFps': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAverageFps,
                    request_deserializer=greet__pb2.GetAverageFpsRequest.FromString,
                    response_serializer=greet__pb2.GetAverageFpsResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CameraStream.CameraStream', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CameraStream(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendCameraStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CameraStream.CameraStream/SendCameraStream',
            greet__pb2.SendCameraStreamRequest.SerializeToString,
            greet__pb2.SendCameraStreamResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveCameraIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CameraStream.CameraStream/GetActiveCameraIds',
            greet__pb2.GetActiveCameraIdsRequest.SerializeToString,
            greet__pb2.GetActiveCameraIdsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCameraTexture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CameraStream.CameraStream/GetCameraTexture',
            greet__pb2.GetCameraTextureRequest.SerializeToString,
            greet__pb2.GetCameraTextureResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAverageFps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CameraStream.CameraStream/GetAverageFps',
            greet__pb2.GetAverageFpsRequest.SerializeToString,
            greet__pb2.GetAverageFpsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
